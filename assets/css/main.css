@charset "UTF-8";
/*
! tailwindcss v3.4.4 | MIT License | https://tailwindcss.com
*/ /*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/
@import url("https://fonts.googleapis.com/css?family=Special+Elite");
*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}

::before,
::after {
  --tw-content: "";
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/
html,
:host {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
  tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
  -webkit-tap-highlight-color: transparent; /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/
body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/
hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/
abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/
a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/
b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/
code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-feature-settings: normal; /* 2 */
  font-variation-settings: normal; /* 3 */
  font-size: 1em; /* 4 */
}

/*
Add the correct font size in all browsers.
*/
small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/
table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  letter-spacing: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/
button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/
button,
input:where([type=button]),
input:where([type=reset]),
input:where([type=submit]) {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/
:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/
:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/
progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/
::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/
summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/
dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/
textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/
input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/
button,
[role=button] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/
img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/
img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x: ;
  --tw-pan-y: ;
  --tw-pinch-zoom: ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position: ;
  --tw-gradient-via-position: ;
  --tw-gradient-to-position: ;
  --tw-ordinal: ;
  --tw-slashed-zero: ;
  --tw-numeric-figure: ;
  --tw-numeric-spacing: ;
  --tw-numeric-fraction: ;
  --tw-ring-inset: ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur: ;
  --tw-brightness: ;
  --tw-contrast: ;
  --tw-grayscale: ;
  --tw-hue-rotate: ;
  --tw-invert: ;
  --tw-saturate: ;
  --tw-sepia: ;
  --tw-drop-shadow: ;
  --tw-backdrop-blur: ;
  --tw-backdrop-brightness: ;
  --tw-backdrop-contrast: ;
  --tw-backdrop-grayscale: ;
  --tw-backdrop-hue-rotate: ;
  --tw-backdrop-invert: ;
  --tw-backdrop-opacity: ;
  --tw-backdrop-saturate: ;
  --tw-backdrop-sepia: ;
  --tw-contain-size: ;
  --tw-contain-layout: ;
  --tw-contain-paint: ;
  --tw-contain-style: ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x: ;
  --tw-pan-y: ;
  --tw-pinch-zoom: ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position: ;
  --tw-gradient-via-position: ;
  --tw-gradient-to-position: ;
  --tw-ordinal: ;
  --tw-slashed-zero: ;
  --tw-numeric-figure: ;
  --tw-numeric-spacing: ;
  --tw-numeric-fraction: ;
  --tw-ring-inset: ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur: ;
  --tw-brightness: ;
  --tw-contrast: ;
  --tw-grayscale: ;
  --tw-hue-rotate: ;
  --tw-invert: ;
  --tw-saturate: ;
  --tw-sepia: ;
  --tw-drop-shadow: ;
  --tw-backdrop-blur: ;
  --tw-backdrop-brightness: ;
  --tw-backdrop-contrast: ;
  --tw-backdrop-grayscale: ;
  --tw-backdrop-hue-rotate: ;
  --tw-backdrop-invert: ;
  --tw-backdrop-opacity: ;
  --tw-backdrop-saturate: ;
  --tw-backdrop-sepia: ;
  --tw-contain-size: ;
  --tw-contain-layout: ;
  --tw-contain-paint: ;
  --tw-contain-style: ;
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}
@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}
@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}
@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}
@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}
.prose {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.prose :where(p):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where([class~=lead]):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.prose :where(a):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.prose :where(a):not(:where([class~=not-prose], [class~=not-prose] *)):hover {
  color: #fcd34d;
}

.prose :where(strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.prose :where(a strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
}

.prose :where(blockquote strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
}

.prose :where(thead th strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
}

.prose :where(ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}

.prose :where(ol[type=A]):not(:where([class~=not-prose], [class~=not-prose] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type=a]):not(:where([class~=not-prose], [class~=not-prose] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type=A s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type=a s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type=I]):not(:where([class~=not-prose], [class~=not-prose] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type=i]):not(:where([class~=not-prose], [class~=not-prose] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type=I s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type=i s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="1"]):not(:where([class~=not-prose], [class~=not-prose] *)) {
  list-style-type: decimal;
}

.prose :where(ul):not(:where([class~=not-prose], [class~=not-prose] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}

.prose :where(ol > li):not(:where([class~=not-prose], [class~=not-prose] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.prose :where(ul > li):not(:where([class~=not-prose], [class~=not-prose] *))::marker {
  color: var(--tw-prose-bullets);
}

.prose :where(dt):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.25em;
}

.prose :where(hr):not(:where([class~=not-prose], [class~=not-prose] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.prose :where(blockquote):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-weight: 500;
  font-style: normal;
  color: var(--tw-prose-quotes);
  border-inline-start-width: 0.25rem;
  border-inline-start-color: var(--tw-prose-quote-borders);
  quotes: "“" "”" "‘" "’";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-inline-start: 1em;
  border: none;
}

.prose :where(blockquote):not(:where([class~=not-prose], [class~=not-prose] *)) p {
  margin-bottom: 0.4rem;
  position: relative;
  font-style: italic;
}

.prose :where(blockquote):not(:where([class~=not-prose], [class~=not-prose] *)) cite {
  font-style: normal;
}

.prose :where(blockquote p:first-of-type):not(:where([class~=not-prose], [class~=not-prose] *))::before {
  content: open-quote;
  position: absolute;
  left: -1.4rem;
}

.prose :where(blockquote p:last-of-type):not(:where([class~=not-prose], [class~=not-prose] *))::after {
  content: close-quote;
  margin-left: 0.2rem;
}

.prose :where(h1):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.prose :where(h1 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-weight: 900;
  color: inherit;
}

.prose :where(h2):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.prose :where(h2 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-weight: 800;
  color: inherit;
}

.prose :where(h3):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.prose :where(h3 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(h4):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.prose :where(h4 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(img):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(picture):not(:where([class~=not-prose], [class~=not-prose] *)) {
  display: block;
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(video):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(kbd):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-weight: 500;
  font-family: inherit;
  color: var(--tw-prose-kbd);
  box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows)/10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows)/10%);
  font-size: 0.875em;
  border-radius: 0.3125rem;
  padding-top: 0.1875em;
  padding-inline-end: 0.375em;
  padding-bottom: 0.1875em;
  padding-inline-start: 0.375em;
}

.prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *))::before {
  content: "`";
}

.prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *))::after {
  content: "`";
}

.prose :where(a code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
}

.prose :where(h1 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
}

.prose :where(h2 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
  font-size: 0.875em;
}

.prose :where(h3 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
  font-size: 0.9em;
}

.prose :where(h4 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
}

.prose :where(blockquote code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
}

.prose :where(thead th code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
}

.prose :where(pre):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-inline-end: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-inline-start: 1.1428571em;
}

.prose :where(pre code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.prose :where(pre code):not(:where([class~=not-prose], [class~=not-prose] *))::before {
  content: none;
}

.prose :where(pre code):not(:where([class~=not-prose], [class~=not-prose] *))::after {
  content: none;
}

.prose :where(table):not(:where([class~=not-prose], [class~=not-prose] *)) {
  width: 100%;
  table-layout: auto;
  text-align: start;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.prose :where(thead):not(:where([class~=not-prose], [class~=not-prose] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.prose :where(thead th):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}

.prose :where(tbody tr):not(:where([class~=not-prose], [class~=not-prose] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.prose :where(tbody tr:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  border-bottom-width: 0;
}

.prose :where(tbody td):not(:where([class~=not-prose], [class~=not-prose] *)) {
  vertical-align: baseline;
}

.prose :where(tfoot):not(:where([class~=not-prose], [class~=not-prose] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.prose :where(tfoot td):not(:where([class~=not-prose], [class~=not-prose] *)) {
  vertical-align: top;
}

.prose :where(figure > *):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(figcaption):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.prose {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-kbd: #111827;
  --tw-prose-kbd-shadows: 17 24 39;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.prose :where(picture > img):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(li):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose :where(ol > li):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-start: 0.375em;
}

.prose :where(ul > li):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-start: 0.375em;
}

.prose :where(.prose > ul > li p):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(.prose > ul > li > p:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 1.25em;
}

.prose :where(.prose > ul > li > p:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 1.25em;
}

.prose :where(.prose > ol > li > p:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 1.25em;
}

.prose :where(.prose > ol > li > p:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(dl):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where(dd):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0.5em;
  padding-inline-start: 1.625em;
}

.prose :where(hr + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
}

.prose :where(h2 + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
}

.prose :where(h3 + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
}

.prose :where(h4 + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
}

.prose :where(thead th:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-start: 0;
}

.prose :where(thead th:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-end: 0;
}

.prose :where(tbody td, tfoot td):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-top: 0.5714286em;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}

.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-start: 0;
}

.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-end: 0;
}

.prose :where(figure):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(.prose > :first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
}

.prose :where(.prose > :last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 0;
}

.prose-xl {
  font-size: 1.25rem;
  line-height: 1.8;
}

.prose-xl :where(p):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.prose-xl :where([class~=lead]):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-size: 1.2em;
  line-height: 1.5;
  margin-top: 1em;
  margin-bottom: 1em;
}

.prose-xl :where(blockquote):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-inline-start: 1.0666667em;
}

.prose-xl :where(h1):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-size: 2.8em;
  margin-top: 0;
  margin-bottom: 0.8571429em;
  line-height: 1;
}

.prose-xl :where(h2):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-size: 1.8em;
  margin-top: 1.5555556em;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.prose-xl :where(h3):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-size: 1.5em;
  margin-top: 1.6em;
  margin-bottom: 0.6666667em;
  line-height: 1.3333333;
}

.prose-xl :where(h4):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 1.8em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.prose-xl :where(img):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose-xl :where(picture):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose-xl :where(picture > img):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose-xl :where(video):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose-xl :where(kbd):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-size: 0.9em;
  border-radius: 0.3125rem;
  padding-top: 0.25em;
  padding-inline-end: 0.4em;
  padding-bottom: 0.25em;
  padding-inline-start: 0.4em;
}

.prose-xl :where(code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-size: 0.9em;
}

.prose-xl :where(h2 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-size: 0.8611111em;
}

.prose-xl :where(h3 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-size: 0.9em;
}

.prose-xl :where(pre):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-size: 0.9em;
  line-height: 1.7777778;
  margin-top: 2em;
  margin-bottom: 2em;
  border-radius: 0.5rem;
  padding-top: 1.1111111em;
  padding-inline-end: 1.3333333em;
  padding-bottom: 1.1111111em;
  padding-inline-start: 1.3333333em;
}

.prose-xl :where(ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 1.2em;
  margin-bottom: 1.2em;
  padding-inline-start: 1.6em;
}

.prose-xl :where(ul):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 1.2em;
  margin-bottom: 1.2em;
  padding-inline-start: 1.6em;
}

.prose-xl :where(li):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0.6em;
  margin-bottom: 0.6em;
}

.prose-xl :where(ol > li):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-start: 0.4em;
}

.prose-xl :where(ul > li):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-start: 0.4em;
}

.prose-xl :where(.prose-xl > ul > li p):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0.8em;
  margin-bottom: 0.8em;
}

.prose-xl :where(.prose-xl > ul > li > p:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 1.2em;
}

.prose-xl :where(.prose-xl > ul > li > p:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 1.2em;
}

.prose-xl :where(.prose-xl > ol > li > p:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 1.2em;
}

.prose-xl :where(.prose-xl > ol > li > p:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 1.2em;
}

.prose-xl :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0.8em;
  margin-bottom: 0.8em;
}

.prose-xl :where(dl):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.prose-xl :where(dt):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 1.2em;
}

.prose-xl :where(dd):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0.6em;
  padding-inline-start: 1.6em;
}

.prose-xl :where(hr):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 2.8em;
  margin-bottom: 2.8em;
}

.prose-xl :where(hr + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
}

.prose-xl :where(h2 + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
}

.prose-xl :where(h3 + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
}

.prose-xl :where(h4 + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
}

.prose-xl :where(table):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-size: 0.9em;
  line-height: 1.5555556;
}

.prose-xl :where(thead th):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-end: 0.6666667em;
  padding-bottom: 0.8888889em;
  padding-inline-start: 0.6666667em;
}

.prose-xl :where(thead th:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-start: 0;
}

.prose-xl :where(thead th:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-end: 0;
}

.prose-xl :where(tbody td, tfoot td):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-top: 0.8888889em;
  padding-inline-end: 0.6666667em;
  padding-bottom: 0.8888889em;
  padding-inline-start: 0.6666667em;
}

.prose-xl :where(tbody td:first-child, tfoot td:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-start: 0;
}

.prose-xl :where(tbody td:last-child, tfoot td:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-end: 0;
}

.prose-xl :where(figure):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose-xl :where(figure > *):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose-xl :where(figcaption):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-size: 0.9em;
  line-height: 1.5555556;
  margin-top: 1em;
}

.prose-xl :where(.prose-xl > :first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
}

.prose-xl :where(.prose-xl > :last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 0;
}

.prose-slate {
  --tw-prose-body: #334155;
  --tw-prose-headings: #0f172a;
  --tw-prose-lead: #475569;
  --tw-prose-links: #0f172a;
  --tw-prose-bold: #0f172a;
  --tw-prose-counters: #64748b;
  --tw-prose-bullets: #cbd5e1;
  --tw-prose-hr: #e2e8f0;
  --tw-prose-quotes: #0f172a;
  --tw-prose-quote-borders: #e2e8f0;
  --tw-prose-captions: #64748b;
  --tw-prose-kbd: #0f172a;
  --tw-prose-kbd-shadows: 15 23 42;
  --tw-prose-code: #0f172a;
  --tw-prose-pre-code: #e2e8f0;
  --tw-prose-pre-bg: #1e293b;
  --tw-prose-th-borders: #cbd5e1;
  --tw-prose-td-borders: #e2e8f0;
  --tw-prose-invert-body: #cbd5e1;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #94a3b8;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #94a3b8;
  --tw-prose-invert-bullets: #475569;
  --tw-prose-invert-hr: #334155;
  --tw-prose-invert-quotes: #f1f5f9;
  --tw-prose-invert-quote-borders: #334155;
  --tw-prose-invert-captions: #94a3b8;
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #cbd5e1;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #475569;
  --tw-prose-invert-td-borders: #334155;
}

.\!prose-invert {
  --tw-prose-body: var(--tw-prose-invert-body) !important;
  --tw-prose-headings: var(--tw-prose-invert-headings) !important;
  --tw-prose-lead: var(--tw-prose-invert-lead) !important;
  --tw-prose-links: var(--tw-prose-invert-links) !important;
  --tw-prose-bold: var(--tw-prose-invert-bold) !important;
  --tw-prose-counters: var(--tw-prose-invert-counters) !important;
  --tw-prose-bullets: var(--tw-prose-invert-bullets) !important;
  --tw-prose-hr: var(--tw-prose-invert-hr) !important;
  --tw-prose-quotes: var(--tw-prose-invert-quotes) !important;
  --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders) !important;
  --tw-prose-captions: var(--tw-prose-invert-captions) !important;
  --tw-prose-kbd: var(--tw-prose-invert-kbd) !important;
  --tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows) !important;
  --tw-prose-code: var(--tw-prose-invert-code) !important;
  --tw-prose-pre-code: var(--tw-prose-invert-pre-code) !important;
  --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg) !important;
  --tw-prose-th-borders: var(--tw-prose-invert-th-borders) !important;
  --tw-prose-td-borders: var(--tw-prose-invert-td-borders) !important;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.pointer-events-none {
  pointer-events: none;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.inset-y-0 {
  top: 0px;
  bottom: 0px;
}

.bottom-0 {
  bottom: 0px;
}

.left-0 {
  left: 0px;
}

.left-1\/2 {
  left: 50%;
}

.right-0 {
  right: 0px;
}

.start-0 {
  inset-inline-start: 0px;
}

.top-0 {
  top: 0px;
}

.col-span-1 {
  grid-column: span 1/span 1;
}

.col-span-5 {
  grid-column: span 5/span 5;
}

.mx-4 {
  margin-left: 1rem;
  margin-right: 1rem;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-2 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

.my-4 {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.mb-16 {
  margin-bottom: 4rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.ml-6 {
  margin-left: 1.5rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-4 {
  margin-top: 1rem;
}

.mt-8 {
  margin-top: 2rem;
}

.mt-96 {
  margin-top: 24rem;
}

.block {
  display: block;
}

.inline {
  display: inline;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.grid {
  display: grid;
}

.hidden {
  display: none;
}

.aspect-auto {
  aspect-ratio: auto;
}

.aspect-video {
  aspect-ratio: 16/9;
}

.h-12 {
  height: 3rem;
}

.h-4 {
  height: 1rem;
}

.h-6 {
  height: 1.5rem;
}

.h-auto {
  height: auto;
}

.h-px {
  height: 1px;
}

.min-h-screen {
  min-height: 100vh;
}

.w-12 {
  width: 3rem;
}

.w-4 {
  width: 1rem;
}

.w-6 {
  width: 1.5rem;
}

.w-96 {
  width: 24rem;
}

.w-auto {
  width: auto;
}

.w-full {
  width: 100%;
}

.min-w-full {
  min-width: 100%;
}

.max-w-screen-lg {
  max-width: 1024px;
}

.max-w-screen-md {
  max-width: 768px;
}

.grow {
  flex-grow: 1;
}

.basis-full {
  flex-basis: 100%;
}

.-translate-x-1\/2 {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
.animate-spin {
  animation: spin 1s linear infinite;
}

.cursor-pointer {
  cursor: pointer;
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.grid-cols-6 {
  grid-template-columns: repeat(6, minmax(0, 1fr));
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-8 {
  gap: 2rem;
}

.overflow-hidden {
  overflow: hidden;
}

.text-ellipsis {
  text-overflow: ellipsis;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.border {
  border-width: 1px;
}

.border-0 {
  border-width: 0px;
}

.border-gray-600 {
  --tw-border-opacity: 1;
  border-color: rgb(75 85 99/var(--tw-border-opacity));
}

.bg-\[\#14171C\] {
  --tw-bg-opacity: 1;
  background-color: rgb(20 23 28/var(--tw-bg-opacity));
}

.bg-gray-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235/var(--tw-bg-opacity));
}

.bg-gray-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251/var(--tw-bg-opacity));
}

.bg-gray-700 {
  --tw-bg-opacity: 1;
  background-color: rgb(55 65 81/var(--tw-bg-opacity));
}

.bg-cover {
  background-size: cover;
}

.bg-center {
  background-position: center;
}

.fill-current {
  fill: currentColor;
}

.fill-gray-400 {
  fill: #9ca3af;
}

.fill-gray-800 {
  fill: #1f2937;
}

.object-cover {
  -o-object-fit: cover;
  object-fit: cover;
}

.object-center {
  -o-object-position: center;
  object-position: center;
}

.p-2 {
  padding: 0.5rem;
}

.p-4 {
  padding: 1rem;
}

.p-6 {
  padding: 1.5rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

.ps-10 {
  padding-inline-start: 2.5rem;
}

.ps-3 {
  padding-inline-start: 0.75rem;
}

.pt-4 {
  padding-top: 1rem;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.font-poem {
  font-family: Special Elite;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.font-bold {
  font-weight: 700;
}

.font-extrabold {
  font-weight: 800;
}

.font-light {
  font-weight: 300;
}

.font-medium {
  font-weight: 500;
}

.font-normal {
  font-weight: 400;
}

.font-semibold {
  font-weight: 600;
}

.uppercase {
  text-transform: uppercase;
}

.italic {
  font-style: italic;
}

.\!not-italic {
  font-style: normal !important;
}

.text-gray-200 {
  --tw-text-opacity: 1;
  color: rgb(229 231 235/var(--tw-text-opacity));
}

.text-gray-400 {
  --tw-text-opacity: 1;
  color: rgb(156 163 175/var(--tw-text-opacity));
}

.text-gray-600 {
  --tw-text-opacity: 1;
  color: rgb(75 85 99/var(--tw-text-opacity));
}

.text-gray-900 {
  --tw-text-opacity: 1;
  color: rgb(17 24 39/var(--tw-text-opacity));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255/var(--tw-text-opacity));
}

.no-underline {
  text-decoration-line: none;
}

.placeholder-gray-400::-moz-placeholder {
  --tw-placeholder-opacity: 1;
  color: rgb(156 163 175/var(--tw-placeholder-opacity));
}

.placeholder-gray-400::placeholder {
  --tw-placeholder-opacity: 1;
  color: rgb(156 163 175/var(--tw-placeholder-opacity));
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0, 0, 0, 0)), var(--tw-ring-shadow, 0 0 rgba(0, 0, 0, 0)), var(--tw-shadow);
}

.brightness-\[0\.7\] {
  --tw-brightness: brightness(0.7);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.duration-500 {
  transition-duration: 500ms;
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.autoComplete_wrapper > ul {
  position: absolute;
  max-height: 30rem;
  overflow-y: scroll;
  box-sizing: border-box;
  background-color: white;
  left: 0;
  right: 0;
  margin: 0.5rem 0 0 0;
  padding: 0;
  z-index: 1;
  list-style: none;
  border-radius: 0.6rem;
  border: 1px solid rgba(33, 33, 33, 0.07);
  box-shadow: 0 3px 6px rgba(149, 157, 165, 0.15);
  outline: none;
  transition: opacity 0.15s ease-in-out;
  -moz-transition: opacity 0.15s ease-in-out;
  -webkit-transition: opacity 0.15s ease-in-out;
}

.autoComplete_wrapper > ul {
  z-index: 100;
}

.autoComplete_wrapper > ul[hidden],
.autoComplete_wrapper > ul:empty {
  display: block;
  opacity: 0;
  transform: scale(0);
}

.autoComplete_wrapper > ul > li {
  margin: 0.3rem;
  padding: 0.3rem 0.5rem;
  text-align: left;
  font-size: 1rem;
  color: #212121;
  border-radius: 0.35rem;
  background-color: white;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  transition: all 0.2s ease;
}

.autoComplete_wrapper > ul > li mark {
  background-color: transparent;
  color: #fbbf24;
  font-weight: bold;
}

.autoComplete_wrapper > ul > li:hover {
  cursor: pointer;
  background-color: #fde68a;
}

.autoComplete_wrapper > ul > li[aria-selected=true] {
  background-color: rgba(255, 122, 122, 0.15);
}

.swiper-button-disabled {
  display: none;
}

@media (min-width: 640px) {
  .sm\:prose-2xl {
    font-size: 1.5rem;
    line-height: 1.6666667;
  }
  .sm\:prose-2xl :where(p):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
  }
  .sm\:prose-2xl :where([class~=lead]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-size: 1.25em;
    line-height: 1.4666667;
    margin-top: 1.0666667em;
    margin-bottom: 1.0666667em;
  }
  .sm\:prose-2xl :where(blockquote):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
    padding-inline-start: 1.1111111em;
  }
  .sm\:prose-2xl :where(h1):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-size: 2.6666667em;
    margin-top: 0;
    margin-bottom: 0.875em;
    line-height: 1;
  }
  .sm\:prose-2xl :where(h2):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-size: 2em;
    margin-top: 1.5em;
    margin-bottom: 0.8333333em;
    line-height: 1.0833333;
  }
  .sm\:prose-2xl :where(h3):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-size: 1.5em;
    margin-top: 1.5555556em;
    margin-bottom: 0.6666667em;
    line-height: 1.2222222;
  }
  .sm\:prose-2xl :where(h4):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 1.6666667em;
    margin-bottom: 0.6666667em;
    line-height: 1.5;
  }
  .sm\:prose-2xl :where(img):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .sm\:prose-2xl :where(picture):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .sm\:prose-2xl :where(picture > img):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .sm\:prose-2xl :where(video):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .sm\:prose-2xl :where(kbd):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-size: 0.8333333em;
    border-radius: 0.375rem;
    padding-top: 0.25em;
    padding-inline-end: 0.3333333em;
    padding-bottom: 0.25em;
    padding-inline-start: 0.3333333em;
  }
  .sm\:prose-2xl :where(code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-size: 0.8333333em;
  }
  .sm\:prose-2xl :where(h2 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-size: 0.875em;
  }
  .sm\:prose-2xl :where(h3 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-size: 0.8888889em;
  }
  .sm\:prose-2xl :where(pre):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-size: 0.8333333em;
    line-height: 1.8;
    margin-top: 2em;
    margin-bottom: 2em;
    border-radius: 0.5rem;
    padding-top: 1.2em;
    padding-inline-end: 1.6em;
    padding-bottom: 1.2em;
    padding-inline-start: 1.6em;
  }
  .sm\:prose-2xl :where(ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
    padding-inline-start: 1.5833333em;
  }
  .sm\:prose-2xl :where(ul):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
    padding-inline-start: 1.5833333em;
  }
  .sm\:prose-2xl :where(li):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }
  .sm\:prose-2xl :where(ol > li):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-start: 0.4166667em;
  }
  .sm\:prose-2xl :where(ul > li):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-start: 0.4166667em;
  }
  .sm\:prose-2xl :where(.sm\:prose-2xl > ul > li p):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0.8333333em;
    margin-bottom: 0.8333333em;
  }
  .sm\:prose-2xl :where(.sm\:prose-2xl > ul > li > p:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 1.3333333em;
  }
  .sm\:prose-2xl :where(.sm\:prose-2xl > ul > li > p:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-bottom: 1.3333333em;
  }
  .sm\:prose-2xl :where(.sm\:prose-2xl > ol > li > p:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 1.3333333em;
  }
  .sm\:prose-2xl :where(.sm\:prose-2xl > ol > li > p:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-bottom: 1.3333333em;
  }
  .sm\:prose-2xl :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0.6666667em;
    margin-bottom: 0.6666667em;
  }
  .sm\:prose-2xl :where(dl):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
  }
  .sm\:prose-2xl :where(dt):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 1.3333333em;
  }
  .sm\:prose-2xl :where(dd):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0.5em;
    padding-inline-start: 1.5833333em;
  }
  .sm\:prose-2xl :where(hr):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 3em;
    margin-bottom: 3em;
  }
  .sm\:prose-2xl :where(hr + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0;
  }
  .sm\:prose-2xl :where(h2 + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0;
  }
  .sm\:prose-2xl :where(h3 + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0;
  }
  .sm\:prose-2xl :where(h4 + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0;
  }
  .sm\:prose-2xl :where(table):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-size: 0.8333333em;
    line-height: 1.4;
  }
  .sm\:prose-2xl :where(thead th):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-end: 0.6em;
    padding-bottom: 0.8em;
    padding-inline-start: 0.6em;
  }
  .sm\:prose-2xl :where(thead th:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-start: 0;
  }
  .sm\:prose-2xl :where(thead th:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-end: 0;
  }
  .sm\:prose-2xl :where(tbody td, tfoot td):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-top: 0.8em;
    padding-inline-end: 0.6em;
    padding-bottom: 0.8em;
    padding-inline-start: 0.6em;
  }
  .sm\:prose-2xl :where(tbody td:first-child, tfoot td:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-start: 0;
  }
  .sm\:prose-2xl :where(tbody td:last-child, tfoot td:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-end: 0;
  }
  .sm\:prose-2xl :where(figure):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .sm\:prose-2xl :where(figure > *):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .sm\:prose-2xl :where(figcaption):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-size: 0.8333333em;
    line-height: 1.6;
    margin-top: 1em;
  }
  .sm\:prose-2xl :where(.sm\:prose-2xl > :first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0;
  }
  .sm\:prose-2xl :where(.sm\:prose-2xl > :last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-bottom: 0;
  }
}
.hover\:scale-110:hover {
  --tw-scale-x: 1.1;
  --tw-scale-y: 1.1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:text-amber-300:hover {
  --tw-text-opacity: 1;
  color: rgb(252 211 77/var(--tw-text-opacity));
}

.focus\:border-blue-500:focus {
  --tw-border-opacity: 1;
  border-color: rgb(59 130 246/var(--tw-border-opacity));
}

.focus\:ring-blue-500:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(59 130 246 / var(--tw-ring-opacity));
}

.group:hover .group-hover\:scale-110 {
  --tw-scale-x: 1.1;
  --tw-scale-y: 1.1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.group:hover .group-hover\:text-amber-300 {
  --tw-text-opacity: 1;
  color: rgb(252 211 77/var(--tw-text-opacity));
}

.group:hover .group-hover\:brightness-50 {
  --tw-brightness: brightness(.5);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.prose-a\:text-white :is(:where(a):not(:where([class~=not-prose], [class~=not-prose] *))) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255/var(--tw-text-opacity));
}

.prose-a\:no-underline :is(:where(a):not(:where([class~=not-prose], [class~=not-prose] *))) {
  text-decoration-line: none;
}

.hover\:prose-a\:text-amber-300 :is(:where(a):not(:where([class~=not-prose], [class~=not-prose] *))):hover {
  --tw-text-opacity: 1;
  color: rgb(252 211 77/var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .sm\:col-span-2 {
    grid-column: span 2/span 2;
  }
  .sm\:col-span-3 {
    grid-column: span 3/span 3;
  }
  .sm\:flex {
    display: flex;
  }
  .sm\:hidden {
    display: none;
  }
  .sm\:w-48 {
    width: 12rem;
  }
  .sm\:w-auto {
    width: auto;
  }
  .sm\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .sm\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .sm\:grid-cols-5 {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }
  .sm\:items-center {
    align-items: center;
  }
  .sm\:justify-between {
    justify-content: space-between;
  }
  .sm\:p-4 {
    padding: 1rem;
  }
  .sm\:pt-0 {
    padding-top: 0px;
  }
  .sm\:text-2xl {
    font-size: 1.5rem;
    line-height: 2rem;
  }
  .sm\:focus\:w-64:focus {
    width: 16rem;
  }
}
@media (min-width: 768px) {
  .md\:mx-6 {
    margin-left: 1.5rem;
    margin-right: 1.5rem;
  }
  .md\:mb-2 {
    margin-bottom: 0.5rem;
  }
  .md\:mt-2 {
    margin-top: 0.5rem;
  }
  .md\:max-h-96 {
    max-height: 24rem;
  }
  .md\:min-w-0 {
    min-width: 0px;
  }
  .md\:basis-1\/3 {
    flex-basis: 33.333333%;
  }
  .md\:basis-2\/3 {
    flex-basis: 66.666667%;
  }
  .md\:text-2xl {
    font-size: 1.5rem;
    line-height: 2rem;
  }
  .md\:text-3xl {
    font-size: 1.875rem;
    line-height: 2.25rem;
  }
  .md\:text-4xl {
    font-size: 2.25rem;
    line-height: 2.5rem;
  }
  .md\:text-lg {
    font-size: 1.125rem;
    line-height: 1.75rem;
  }
}
@media (min-width: 1024px) {
  .lg\:mx-24 {
    margin-left: 6rem;
    margin-right: 6rem;
  }
  .lg\:mx-32 {
    margin-left: 8rem;
    margin-right: 8rem;
  }
  .lg\:mx-auto {
    margin-left: auto;
    margin-right: auto;
  }
  .lg\:my-12 {
    margin-top: 3rem;
    margin-bottom: 3rem;
  }
  .lg\:my-8 {
    margin-top: 2rem;
    margin-bottom: 2rem;
  }
  .lg\:mt-16 {
    margin-top: 4rem;
  }
  .lg\:mt-2 {
    margin-top: 0.5rem;
  }
  .lg\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .lg\:px-32 {
    padding-left: 8rem;
    padding-right: 8rem;
  }
  .lg\:px-6 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
  .lg\:py-2 {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
  }
  .lg\:text-4xl {
    font-size: 2.25rem;
    line-height: 2.5rem;
  }
  .lg\:text-lg {
    font-size: 1.125rem;
    line-height: 1.75rem;
  }
  .lg\:text-xl {
    font-size: 1.25rem;
    line-height: 1.75rem;
  }
  .lg\:focus\:w-80:focus {
    width: 20rem;
  }
}
@media (min-width: 1280px) {
  .xl\:p-8 {
    padding: 2rem;
  }
  .xl\:text-2xl {
    font-size: 1.5rem;
    line-height: 2rem;
  }
  .xl\:text-3xl {
    font-size: 1.875rem;
    line-height: 2.25rem;
  }
  .xl\:text-5xl {
    font-size: 3rem;
    line-height: 1;
  }
  .xl\:text-xl {
    font-size: 1.25rem;
    line-height: 1.75rem;
  }
}
@media (min-width: 1536px) {
  .\32 xl\:p-12 {
    padding: 3rem;
  }
  .\32 xl\:text-2xl {
    font-size: 1.5rem;
    line-height: 2rem;
  }
  .\32 xl\:text-3xl {
    font-size: 1.875rem;
    line-height: 2.25rem;
  }
  .\32 xl\:text-6xl {
    font-size: 3.75rem;
    line-height: 1;
  }
}

/*# sourceMappingURL=main.css.map */